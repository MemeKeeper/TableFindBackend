<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pnlHeader.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="btnExit.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="lblTitle.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="lblHeading.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tclInfo.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tpStaff.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbStaff.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbStaff.Text" xml:space="preserve">
    <value>General restaurant staff members such as waiters and waitresses can access on-screen tables by double-clicking any table object. As general restaurant staff, they will have to ability to:

• View reservations under specific tables made available by an Admin user
• Create reservations under specific tables made available by an Admin user.

Restaurant staff are considered 'General' and not 'Admin' and therefore will not have elevated permissions such as:
                
• Adding new Tables to the restaurant,
• Editing/updating Tables in the restaurants,
• Removing Tables in the restaurant,
• Adding new Menu Items to the interactive menu,
• Updating Menu Items of the interactive menu,
• Removing Menu Items of the interactive menu,
• Removing Reservations already made.</value>
  </data>
  <metadata name="tpAdmin.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbAdmin.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbAdmin.Text" xml:space="preserve">
    <value>Overview:

Admin users, such as the restaurant manager and selected assistant managers can access on-screen tables by double-clicking on any table object. They will also have access to more options when a correct Admin PIN is provided. Admin mode will allow the restaurant manager or selected assistant managers to have access to elivated privileges. These privileges include:

• View reservations under specific tables
• Create reservations under specific tables
• Adding new Tables to the restaurant
• Editing/updating Tables in the restaurants
• Removing Tables in the restaurant
• Adding new Menu Items to the interactive menu
• Updating Menu Items of the interactive menu
• Removing Menu Items of the interactive menu
• Removing Reservations already made


Admin PIN:

The Admin PIN is an effective way for the manager and selected assistant managers to gain access to elevated privileges. The Admin PIN can be changed by editing the Admin User credentials within 'Manage Admin Users'. The user will need to confirm their credentials as an Admin user in order to access this functionality.</value>
  </data>
  <metadata name="tpFunctions.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tpAllReservations.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtcFunctionsPnlAllReservations.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtcFunctionsPnlAllReservations.Text" xml:space="preserve">
    <value>This allows the user to view a list of all reservations that have not yet expired, along with the reservation details - Customer name, date and time of the reservation, who booked the reservation (Restaurant or Customer), Customer's contact number and the table name. Within this window, the user will be able to select a reservation and then view contact details of the user who made the reservation.</value>
  </data>
  <metadata name="tpCapacityStatus.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbCapacityStatus.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbCapacityStatus.Text" xml:space="preserve">
    <value>This allows the user to set the Restaurant's capacity status to either Not Busy, Moderately Busy, and Very Busy. The actual capacity status will display on the main screen at the top-center of the screen.</value>
  </data>
  <metadata name="tpOverview.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbOverview.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbOverview.Text" xml:space="preserve">
    <value>This panel serves as the main navigation panel for the applictaion.
General Users will be able to see the following buttons within this panel:
View All Reservations 
Change Restaurant Capacity Status
How To Use?
Refresh
Enter Admin PIN to access Admin Mode input field
Enable Admin Mode
Manage Admin Users

The only buttons that the General User will be able to access are View All Reservations, Change Restaurant Capacity Status, Refresh and How To Use? The General user will be able to enter an Admin PIN only if they have been registered as an Admin User by the restaurant manager or owner.</value>
  </data>
  <metadata name="rtbEnableAdmin.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tpChangePIN.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbChangePIN.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbChangePIN.Text" xml:space="preserve">
    <value>This will prompt the user to provide their login credentials again to confirm that they are an Admin user. Once the login credentials are confirmed, the user will be able to add new Admin users, edit existing Admin users, deactivate and delete existing Admin users. Deactivating an Admin user effectively disables their elevated privileges. To reactivate an Admin user or to delete that Admin user, navigate to the 'Unactive Admin User' tab.
</value>
  </data>
  <metadata name="rtbRefresh.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tpUsingTables.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbUsingTables.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbUsingTables.Text" xml:space="preserve">
    <value>When not in Admin mode, the user can double-click on any table item on the right-hand side of the screen. This will open the Reservations window where the user can add reservations under the selected table. 

When in Admin mode, the user can drag the table items on the right-hand side of the screen to change the table's position. 
The user can also double-click on a table to open the table editor, which will allow the user to change the name of the table, maximum capacity, table description and availability, and view the reservations made under it by pressing the 'Reservations' button.
Please note that changes will not be saved unless the user selects the 'Save Changes' button. These changes will only be applied once the user finishes their session as an Admin user by clicking the 'Finish' button on the main screen.</value>
  </data>
  <metadata name="tpOverviewElevated.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtcElevatedOverview.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tpAddNewTable.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbAddNewTable.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbAddNewTable.Text" xml:space="preserve">
    <value>This will open the Table Editor window where the user can create new table objects. The user can enter the table name, number of seats the table should have and table description (where in the restaurant the table object is located).

The user will be able to view the reservations made for that table via the Reservations button.

The user will also be able to delete the table and make the table Available or Unavailable.</value>
  </data>
  <metadata name="tpRestaurantOptions.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="richTextBox2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="richTextBox2.Text" xml:space="preserve">
    <value>The user will be able to:
• Edit restaurant information - name, location, and contact number.
• Change the restaurant layout image displayed on the main screen by selecting an image file from the computer, or reset the layout image to blank.
• Change the restaurant's opening and closing times
• Deactivate the restaurant by navigating to the Danger Zone within this form.
• View a System Report by clicking on the 'Open System Report Page' button.

System Report:
The system report shows basic system information collected throughout the working day such as:
• Restaurant Tables - displays a list of restaurant tables with their basic information such as name, capacity, description and availability.
• System Log - displays a list of most actions taken by the users throughout their session such as editing table information, logging in, changing the restaurant layout etc.
• Admin Users - displays a list of all admin users along with how many times they logged in as admin and the times that they logged in throughout the working day.
• Active and Past Reservations - displays a list of any active or past reservations made.

This report can be generated as an Excel, Word or PDF document which is automatically saved to the local device.

Restaurant Deactivation:
This is helpful for when the restaurant would like to temporarily close, for example when changing locations. To deactivate the restaurant, the user will have to provide the restaurant owner's email address and password, as well as answer a security question. Once the user deactivates the restaurant a Confirmation email will be sent to them containing their restaurant ID and their user ID.
To reactivate the restaurant, the restaurant manager or owner should contact the TableFind Development Team using the references provided in the Deactivation confirmation email.

Please note that any changes made will not be saved until the user clicks the 'Save' button and these changes will not be applied until the user ends the Admin session by selecting 'Finish' on the main screen.</value>
  </data>
  <metadata name="rtbRestaurantOptions.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbRestaurantOptions.Text" xml:space="preserve">
    <value>The user will be able to edit restaurant information - name, location, and contact number.

The user will be able to upload a menu in the form of a PDF file, PNG file or a JPEG file. This menu will display on the TableFind Mobile application.

The user can change the restaurant layout image displayed on the main screen by selecting an image file from the computer.

	// functionality for System Report</value>
  </data>
  <metadata name="tpEditMenu.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbMenuItems.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbMenuItems.Text" xml:space="preserve">
    <value>The Menu Items window will allow the user to to add, edit, and delete menu items from the Interactive Menu that will display on the TableFind Mobile application, as well as sort these menu items by price, recently added and meal type.

Adding a Menu Item:
The user can click on the 'Add Item' button which will provide a new interface that will allow the user to specify all the details of the new item - name, type, price and description.	
	
Editing a Menu Item:
The user must select the menu item he/she would like to modify on the right side of the window. After selecting an item, the left side will become enabled and can then be used to make changes to the selected item.</value>
  </data>
  <metadata name="tpLogout.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbLogout.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tpUpdates.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbUpdates.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbUpdates.Text" xml:space="preserve">
    <value>This runs a secondary program in the background which will check for any available updates. If there is an update available, the user wil be notified and will have the option to view update details, and to download the new update. 

Once the user downloads the update, the TableFind Backend program will close and the new version will automatically open.</value>
  </data>
  <metadata name="tpFinish.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbUpdate.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tpReservations.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="richTextBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>The Reservations panel is located in the top-left corner of the screen and has two tabs to view - Current Reservations and Previous Reservations.
The panel's main functions include notifying the user that a new reservation has been made and displaying these reservations in the form of Restaurant objects. If the user wishes to view a list of all reservations, the user should navigate to the Functions panel just below the Reservations panel, that includes a few buttons. 

• Current Reservations:
When a new reservation is made, either by the restaurant or by a customer, a flashing Reservation object will appear inside the panel under Current Reservations. This object shows basic reservation information such as the client information - name and contact number, and table information - table name, date of the reservation and the duration that the table was reserved for.
If the user clicks on the object, a secondary window Reservation for &lt;Customer name&gt; will open and the flashing will stop. This window shows the basic information listed previously, as well as whether the reservation was made by the restaurant or a customer, and includes the table capacity.

• Previous Reservations:
If a reservation has been cancelled or removed, or if the reservation has expired, the reservation object will move from the Current Reservations tab and appear in the panel under Previous Reservations.</value>
  </data>
  <metadata name="tabPage1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rtbGettingStarted.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="rtbGettingStarted.Text" xml:space="preserve">
    <value>The intended first user of this application is the restaurant owner or manager. Once the restaurant owner or manager has successfully registered his or her restaurant with the TableFind Development Team, the next steps will be to populate the workspace of this application.

To get started, the user is advised to create Admin Users. Admin users will have full functionality of the program, granted by Admin PINs. This can be done by selecting the 'Manage Admin Users' button found on the main screen. Once at least one Admin user has been created, the PIN should be entered in the provided space and Admin Mode should be enabled.

Next, the user should create Table objects that appear on the main screen as rectangular shapes. This can be done by selecting the 'Add New Table' button found on the main screen after Admin Mode has been enabled. The user can then drag the Table objects around on the screen and place them anywhere within the panel. Users are advised to upload a floorplan of their restaurant to visually aid in the placement of Table objects. This can be done by selecting the 'Restaurant Options' button once in Admin Mode.

The final step is to create Menu Items that users of the mobile application will see. This can be done by selecting the 'Menu Items' button on the main screen after Admin Mode has been enabled.

For more in-depth information of the application, please be advised to read the full manual. </value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>